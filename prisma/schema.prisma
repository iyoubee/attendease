// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id                String       @id @default(cuid())
    name              String?
    email             String?      @unique
    role              String       @default("user")
    passwordHash      String
    accounts          Account[]
    sessions          Session[]
    attendances       Attendance[]
    companyId         String
    company           Company      @relation(fields: [companyId], references: [id], onDelete: Cascade)
    isReset           Boolean      @default(false)
    passwordGenerated String?
}

model Company {
    id        String   @id @default(cuid())
    name      String?
    domain    String   @unique
    user      User[]
    packageId String
    package   Package? @relation(fields: [packageId], references: [id])
}

model Package {
    id      String    @id @default(cuid())
    name    String?
    Price   Int
    maxUser Int
    Company Company[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Attendance {
    id       String   @id @default(cuid())
    userId   String
    user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    date     DateTime @default(now())
    attended Boolean  @default(false)
}
